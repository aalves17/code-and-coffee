{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Ale\\\\Documents\\\\SemanaOmniStack\\\\code-and-coffee\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ale\\\\Documents\\\\SemanaOmniStack\\\\code-and-coffee\\\\frontend\\\\src\\\\pages\\\\New\\\\index.js\";\nimport React, { useState, useMemo } from 'react';\nimport api from '../../services/api';\nimport camera from \"../../assets/camera.svg\";\nimport './styles.css';\nexport default function New({\n  history\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        company = _useState2[0],\n        setCompany = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        techs = _useState4[0],\n        setTechs = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        price = _useState6[0],\n        setPrice = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        thumbnail = _useState8[0],\n        setThumbnail = _useState8[1];\n\n  const preview = useMemo(() => {\n    return thumbnail ? URL.createObjectURL(thumbnail) : null;\n  }, [thumbnail]);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const data = new FormData();\n    const user_id = localStorage.getItem('user');\n    data.append('thumbnail', thumbnail);\n    data.append('company', company);\n    data.append('price', price);\n    data.append('techs', techs);\n    await api.post('/spots', data, {\n      headers: {\n        user_id\n      }\n    });\n    history.push('/dashboard');\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"thumbnail\",\n    style: {\n      backgroundImage: \"url(\".concat(preview, \")\")\n    },\n    className: thumbnail ? 'has-thumbnail' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    onChange: event => setThumbnail(event.target.files[0]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: camera,\n    alt: \"Select img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Empresa\"), React.createElement(\"input\", {\n    id: \"company\",\n    placeholder: \"Sua empresa e-mail\",\n    value: company,\n    onChange: event => setCompany(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Tecnologias * \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"(separadas por v\\xEDrgula)\")), React.createElement(\"input\", {\n    id: \"techs\",\n    placeholder: \"Quais suas tecnologias?\",\n    value: techs,\n    onChange: event => setTechs(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Valor da Di\\xE1ria \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"(em branco para GRATUITO)\")), React.createElement(\"input\", {\n    id: \"price\",\n    placeholder: \"Quais suas tecnologias?\",\n    value: price,\n    onChange: event => setPrice(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Cadastrar\"));\n}","map":{"version":3,"sources":["C:\\Users\\Ale\\Documents\\SemanaOmniStack\\code-and-coffee\\frontend\\src\\pages\\New\\index.js"],"names":["React","useState","useMemo","api","New","history","company","setCompany","techs","setTechs","price","setPrice","thumbnail","setThumbnail","preview","URL","createObjectURL","handleSubmit","event","preventDefault","data","FormData","user_id","localStorage","getItem","append","post","headers","push","backgroundImage","target","files","camera","value"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport api from '../../services/api';\r\n\r\nimport camera from '../../assets/camera.svg'\r\n\r\nimport './styles.css';\r\n\r\nexport default function New({history}){\r\n    const [company, setCompany] = useState('');\r\n    const [techs, setTechs] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [thumbnail, setThumbnail] = useState('');\r\n\r\n    const preview = useMemo(\r\n        ()=>{return thumbnail ? URL.createObjectURL(thumbnail) : null},\r\n        [thumbnail]\r\n    )\r\n\r\n    async function handleSubmit(event){\r\n        event.preventDefault();\r\n        const data = new FormData();\r\n        const user_id = localStorage.getItem('user');\r\n\r\n        data.append('thumbnail', thumbnail);\r\n        data.append('company', company);\r\n        data.append('price', price);\r\n        data.append('techs', techs);\r\n\r\n        await api.post('/spots', data, {headers:{user_id}});\r\n        history.push('/dashboard');\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <label \r\n                id=\"thumbnail\" \r\n                style={{backgroundImage: `url(${preview})`}}\r\n                className={thumbnail ? 'has-thumbnail': ''}\r\n            >\r\n                <input type=\"file\" onChange={event => setThumbnail(event.target.files[0])}/>\r\n                <img src={camera} alt=\"Select img\"/>\r\n            </label>\r\n\r\n            <label htmlFor=\"company\">Empresa</label>\r\n            <input\r\n                id=\"company\"\r\n                placeholder=\"Sua empresa e-mail\"\r\n                value={company}\r\n                onChange={event => setCompany(event.target.value)}\r\n            />\r\n\r\n            <label htmlFor=\"company\">Tecnologias * <span>(separadas por vírgula)</span></label>\r\n            <input\r\n                id=\"techs\"\r\n                placeholder=\"Quais suas tecnologias?\"\r\n                value={techs}\r\n                onChange={event => setTechs(event.target.value)}\r\n            />\r\n\r\n            <label htmlFor=\"price\">Valor da Diária <span>(em branco para GRATUITO)</span></label>\r\n            <input\r\n                id=\"price\"\r\n                placeholder=\"Quais suas tecnologias?\"\r\n                value={price}\r\n                onChange={event => setPrice(event.target.value)}\r\n            />\r\n\r\n            <button type=\"submit\" className=\"btn\">Cadastrar</button>\r\n        </form>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}