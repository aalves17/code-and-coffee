{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Ale\\\\Documents\\\\SemanaOmniStack\\\\code-and-coffee\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ale\\\\Documents\\\\SemanaOmniStack\\\\code-and-coffee\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\index.js\";\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\nimport socketio from 'socket.io-client';\nimport './styles.css';\nexport default function Dashboard() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        spots = _useState2[0],\n        setSpots = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        requests = _useState4[0],\n        setRequests = _useState4[1];\n\n  const user_id = localStorage.getItem('user'); //so muda quando user_id for mudado\n\n  const socket = useMemo(() => socketio('http://localhost:3333', {\n    query: {\n      user_id\n    }\n  }), [user_id]); //quando mduar request e socket recalcula usereffect\n\n  useEffect(() => {\n    socket.on('booking_request', data => {\n      console.log(data);\n      setRequests([...requests, data]);\n    });\n  }, [requests, socket]); //cliente ouvindo toda vez que recebe um hello\n  // socket.on('hello', data =>{\n  //     console.log(data);\n  // })\n  //enviar para o back\n  // socket.emit('omni', 'Stack');\n\n  useEffect(() => {\n    async function loadSpots() {\n      const user_id = localStorage.getItem('user');\n      const response = await api.get('/dashboard', {\n        headers: {\n          user_id\n        }\n      });\n      setSpots(response.data);\n    }\n\n    loadSpots();\n  }, []);\n\n  function handleAccept(id) {}\n\n  return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    className: \"notifications\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, requests.map(request => React.createElement(\"li\", {\n    key: request._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, request.user.email), \" est\\xE1 solicitando uma reserva em \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, request.spot.company), \" para a data: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, request.date)), React.createElement(\"button\", {\n    className: \"accept\",\n    onClick: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"ACEITAR\"), React.createElement(\"button\", {\n    className: \"reject\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"REJEITAR\")))), React.createElement(\"ul\", {\n    className: \"spot-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, spots.map(spot => React.createElement(\"li\", {\n    key: spot._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    style: {\n      backgroundImage: \"url(\".concat(spot.thumbnail_url, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, spot.company), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, spot.price ? \"R$ \".concat(spot.price, \"/dia\") : 'GRATUITO')))), React.createElement(Link, {\n    to: \"/new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Cadastrar novo spot\")));\n}","map":{"version":3,"sources":["C:\\Users\\Ale\\Documents\\SemanaOmniStack\\code-and-coffee\\frontend\\src\\pages\\Dashboard\\index.js"],"names":["React","useEffect","useState","useMemo","Link","api","socketio","Dashboard","spots","setSpots","requests","setRequests","user_id","localStorage","getItem","socket","query","on","data","console","log","loadSpots","response","get","headers","handleAccept","id","map","request","_id","user","email","spot","company","date","backgroundImage","thumbnail_url","price"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport api from '../../services/api'\r\nimport socketio from 'socket.io-client'\r\nimport './styles.css';\r\n\r\nexport default function Dashboard(){\r\n    const [spots, setSpots] = useState([]);\r\n    const [requests, setRequests] = useState([]);\r\n\r\n    const user_id = localStorage.getItem('user');\r\n\r\n    //so muda quando user_id for mudado\r\n    const socket = useMemo(()=>socketio('http://localhost:3333',{\r\n        query:{ user_id }\r\n    }), [user_id]);\r\n\r\n    //quando mduar request e socket recalcula usereffect\r\n    useEffect(()=>{\r\n        socket.on('booking_request', data =>{\r\n            console.log(data);\r\n            setRequests([...requests, data]);\r\n        })\r\n    }, [requests, socket]);\r\n\r\n        //cliente ouvindo toda vez que recebe um hello\r\n        // socket.on('hello', data =>{\r\n        //     console.log(data);\r\n        // })\r\n\r\n        //enviar para o back\r\n        // socket.emit('omni', 'Stack');\r\n\r\n    useEffect(()=>{\r\n        async function loadSpots(){\r\n            const user_id = localStorage.getItem('user');\r\n            const response = await api.get('/dashboard',{\r\n                headers: {user_id}\r\n            });\r\n\r\n            setSpots(response.data);\r\n        }\r\n\r\n        loadSpots();\r\n    }, []);\r\n\r\n    function handleAccept(id){\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ul className=\"notifications\">\r\n                {requests.map(request => (\r\n                    <li key={request._id}>\r\n                        <p>\r\n                            <strong>{request.user.email}</strong> est√° solicitando uma reserva em <strong>{request.spot.company}</strong> para a data: <strong>{request.date}</strong>\r\n                        </p>\r\n                        <button className=\"accept\" onClick>ACEITAR</button>\r\n                        <button className=\"reject\">REJEITAR</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <ul className=\"spot-list\">\r\n                {spots.map(spot => (\r\n                    <li key={spot._id}>\r\n                        <header style={{backgroundImage:`url(${spot.thumbnail_url})`}}/>\r\n                        <strong>{spot.company}</strong>\r\n                        <span>{spot.price ? `R$ ${spot.price}/dia` : 'GRATUITO'}</span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <Link to=\"/new\">\r\n                <button className=\"btn\">Cadastrar novo spot</button>\r\n            </Link>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}